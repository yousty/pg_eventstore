module PgEventstore
  module Commands
    class Append < PgEventstore::AbstractCommand
      # _@param_ `stream`
      #
      # _@param_ `events`
      #
      # _@param_ `options`
      #
      # _@param_ `event_modifier`
      #
      # _@return_ â€” persisted events
      def call: (
          PgEventstore::Stream stream,
          *PgEventstore::Event events,
          ?options: ::Hash[untyped, untyped],
          ?event_modifier: _EventModifier
        ) -> ::Array[PgEventstore::Event]

      # _@param_ `stream`
      #
      # _@param_ `events`
      def create_partitions: (PgEventstore::Stream stream, ::Array[PgEventstore::Event] events) -> void

      # _@param_ `revision`
      #
      # _@param_ `expected_revision`
      #
      # _@param_ `stream`
      def assert_expected_revision!: (Integer revision, (Symbol | Integer) expected_revision, PgEventstore::Stream stream) -> void
    end
  end
end
