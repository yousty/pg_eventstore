module PgEventstore
  module QueryBuilders
    # @!visibility private
    class EventsFiltering < BasicFiltering
      DEFAULT_LIMIT: Integer
      SQL_DIRECTIONS: Hash[String | Symbol, String]
      SUBSCRIPTIONS_OPTIONS: ::Array[Symbol]

      TABLE_NAME: String

      def self.events_filtering: (Stream stream, ::Hash[untyped, untyped] options) -> EventsFiltering

      def self.extract_event_types_filter: (Hash[untyped, untyped] options) -> Array[String]

      def self.extract_streams_filter: (Hash[untyped, untyped] options) -> Array[Hash[untyped, untyped]]

      # _@param_ `options`
      def self.subscriptions_events_filtering: (::Hash[untyped, untyped] options) -> EventsFiltering

      # _@param_ `options`
      def self.all_stream_filtering: (::Hash[untyped, untyped] options) -> EventsFiltering

      # _@param_ `stream`
      #
      # _@param_ `options`
      def self.specific_stream_filtering: (Stream stream, ::Hash[untyped, untyped] options) -> EventsFiltering

      def self.system_stream_filtering: (Stream stream, Hash[untyped, untyped] options) -> EventsFiltering

      def initialize: () -> void

      def add_stream_attrs: (?context: String?, ?stream_name: String?, ?stream_id: String?) -> void

      def add_event_types: (::Array[String] event_types) -> void

      # _@param_ `revision`
      #
      # _@param_ `direction`
      def add_revision: (Integer? revision, (String | Symbol)? direction) -> void

      # _@param_ `position`
      #
      # _@param_ `direction`
      def add_global_position: (Integer? position, (String | Symbol)? direction) -> void

      # _@param_ `direction`
      def add_stream_direction: ((String | Symbol)? direction) -> void

      # _@param_ `direction`
      def add_all_stream_direction: ((String | Symbol)? direction) -> void

      # _@param_ `limit`
      def add_limit: (Integer? limit) -> void

      def set_source: (String table_name)-> void

      def to_sql_builder: () -> SQLBuilder

      def to_exec_params: () -> [String, Array[untyped]]

      # _@param_ `stream_attrs`
      def correct_stream_filter?: (::Hash[untyped, untyped] stream_attrs) -> bool

      # _@param_ `direction`
      def direction_operator: ((String | Symbol)? direction) -> String
    end
  end
end
