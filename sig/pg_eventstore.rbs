module PgEventstore
  DEFAULT_CONFIG: Symbol

  # _@param_ `name` â€” a name to assign to a config
  #
  # _@return_ â€” a result of the given block
  def self.configure: (?name: Symbol) { (PgEventstore::Config) -> untyped } -> Object

  def self.available_configs: () -> ::Array[Symbol]

  # _@param_ `name`
  def self.config: (?Symbol name) -> PgEventstore::Config

  # _@param_ `name`
  def self.connection: (?Symbol name) -> PgEventstore::Connection

  def self.maintenance: (?Symbol name) -> PgEventstore::Maintenance

  def self.subscriptions_manager: (
      ?Symbol config_name,
      subscription_set: String,
      ?max_retries: Integer?,
      ?retries_interval: Integer?,
      ?force_lock: bool
    ) -> PgEventstore::SubscriptionsManager

  # _@param_ `name`
  def self.client: (?Symbol name) -> PgEventstore::Client

  def self.logger: () -> Logger?

  # _@param_ `logger`
  def self.logger=: (Logger? logger) -> Logger?

  def self.init_variables: () -> void

  def self.mutex: () -> Thread::Mutex

  def self.mutex=: (Thread::Mutex value) -> Thread::Mutex
end
